{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/new-todolist/my-app/src/components/AddNewTodolist.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddNewTodolist(props) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n\n  function onTitleChangeHandler(event) {\n    setTitle(event.currentTarget.value);\n    setError(false);\n  }\n\n  function onTitleKeyPressHandler(event) {\n    if (event.key === 'Enter') addNewTodolist();\n  }\n\n  function addNewTodolist() {\n    if (title.trim() !== '') {\n      props.addNewTodolist(title);\n      setTitle('');\n    } else {\n      setError(true);\n    }\n  }\n\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'error-message',\n    children: \" Title is required\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 34\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: error ? 'error' : '',\n      value: title,\n      onChange: onTitleChangeHandler,\n      onKeyPress: onTitleKeyPressHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: addNewTodolist,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewTodolist, \"9j2mlgnVyApk4L8v17fOnVArBvE=\");\n\n_c = AddNewTodolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewTodolist\");","map":{"version":3,"sources":["/Users/admin/Downloads/new-todolist/my-app/src/components/AddNewTodolist.tsx"],"names":["Button","React","useState","AddNewTodolist","props","title","setTitle","error","setError","onTitleChangeHandler","event","currentTarget","value","onTitleKeyPressHandler","key","addNewTodolist","trim","errorMessage"],"mappings":";;;AAAA,SAAQA,MAAR,QAAqB,mBAArB;AACA,OAAOC,KAAP,IAA8DC,QAA9D,QAA6E,OAA7E;;AAMA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAAmD;AAAA;;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAU,KAAV,CAAlC;;AAEA,WAASO,oBAAT,CAA8BC,KAA9B,EAAoE;AAChEJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR;AACAJ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AAED,WAASK,sBAAT,CAAgCH,KAAhC,EAAwE;AACpE,QAAIA,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2BC,cAAc;AAC5C;;AAED,WAASA,cAAT,GAA0B;AACtB,QAAIV,KAAK,CAACW,IAAN,OAAiB,EAArB,EAAyB;AACrBZ,MAAAA,KAAK,CAACW,cAAN,CAAqBV,KAArB;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ;;AAED,QAAMS,YAAY,GAAGV,KAAK,gBAAG;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,GAA+D,IAAzF;AAEA,sBACI;AAAA,4BACI;AACI,MAAA,SAAS,EAAEA,KAAK,GAAG,OAAH,GAAa,EADjC;AAEI,MAAA,KAAK,EAAEF,KAFX;AAGI,MAAA,QAAQ,EAAEI,oBAHd;AAII,MAAA,UAAU,EAAEI;AAJhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AACQ,MAAA,KAAK,EAAC,WADd;AAEQ,MAAA,OAAO,EAAEE,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EAaKE,YAbL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAzCed,c;;KAAAA,c","sourcesContent":["import {Button} from \"@material-ui/core\";\nimport React, {ChangeEvent, KeyboardEvent, MouseEventHandler, useState} from \"react\";\n\ntype AddNewTodolistType = {\n    addNewTodolist: (title: string) => void\n}\n\nexport function AddNewTodolist(props: AddNewTodolistType) {\n    const [title, setTitle] = useState<string>('')\n    const [error, setError] = useState<boolean>(false)\n\n    function onTitleChangeHandler(event: ChangeEvent<HTMLInputElement>) {\n        setTitle(event.currentTarget.value)\n        setError(false)\n    }\n\n    function onTitleKeyPressHandler(event: KeyboardEvent<HTMLInputElement>) {\n        if (event.key === 'Enter') addNewTodolist()\n    }\n\n    function addNewTodolist() {\n        if (title.trim() !== '') {\n            props.addNewTodolist(title)\n            setTitle('')\n        } else {\n            setError(true)\n        }\n    }\n\n    const errorMessage = error ? <div className={'error-message'}> Title is required</div> : null\n\n    return (\n        <div>\n            <input\n                className={error ? 'error' : ''}\n                value={title}\n                onChange={onTitleChangeHandler}\n                onKeyPress={onTitleKeyPressHandler}\n            />\n            {/*<button onClick={addNewTodolist}>+</button>*/}\n            <Button variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={addNewTodolist}>\n                +\n            </Button>\n            {errorMessage}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}