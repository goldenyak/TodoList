{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/new-todolist/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { ToDolist } from './ToDolist';\nimport { v1 } from 'uuid';\nimport { AddNewTodolist } from \"./components/AddNewTodolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: \"Milk\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Apple\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Beer\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Hleb\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Water\",\n      isDone: false\n    }]\n  });\n\n  function removeTask(todoListId, id) {\n    let currentTask = tasks[todoListId];\n    console.log(currentTask);\n\n    if (currentTask) {\n      tasks[todoListId] = currentTask.filter(t => t.id != id);\n    }\n\n    setTasks({ ...tasks\n    });\n  }\n\n  function removeTodolist(todoListId) {\n    let currentTodolist = todolists.filter(f => f.id !== todoListId);\n    setTodolists(currentTodolist);\n  }\n\n  function addTask(todoListId, title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    tasks[todoListId] = [task, ...tasks[todoListId]];\n    setTasks({ ...tasks\n    });\n  }\n\n  function changeStatus(todoListId, taskId, isDone) {\n    let currentStatus = tasks[todoListId];\n    let task = currentStatus.find(t => t.id === taskId);\n\n    if (task) {\n      task.isDone = isDone;\n    }\n\n    setTasks({ ...tasks\n    });\n  }\n\n  function changeFilter(todoListId, value) {\n    let currentTodoList = todolists.find(t => t.id === todoListId);\n    console.log(value);\n\n    if (currentTodoList) {\n      currentTodoList.filter = value;\n    }\n\n    setTodolists([...todolists]);\n  }\n\n  function addNewTodolist(title) {\n    let newTodolistID = v1();\n    let newTodolist = {\n      id: newTodolistID,\n      title: title,\n      filter: 'all'\n    };\n    setTodolists([newTodolist, ...todolists]);\n    setTasks({ ...tasks,\n      [newTodolistID]: []\n    });\n  }\n\n  function changeTaskTitle(title) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddNewTodolist, {\n      addNewTodolist: addNewTodolist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), todolists.map(t => {\n      let tasksForTodolist = tasks[t.id];\n\n      if (t.filter === \"active\") {\n        tasksForTodolist = tasks[t.id].filter(t => t.isDone === false);\n      }\n\n      if (t.filter === \"completed\") {\n        tasksForTodolist = tasks[t.id].filter(t => t.isDone === true);\n      } // debugger\n\n\n      return /*#__PURE__*/_jsxDEV(ToDolist, {\n        todoListId: t.id,\n        title: t.title,\n        tasks: tasksForTodolist,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addTask: addTask,\n        changeTaskStatus: changeStatus,\n        filter: t.filter,\n        removeTodolist: removeTodolist,\n        addNewTodolist: addNewTodolist\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"1KY7h8/eFU/Kht6JfqucAQEFW1k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Downloads/new-todolist/my-app/src/App.tsx"],"names":["React","useState","ToDolist","v1","AddNewTodolist","App","todolistID1","todolistID2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","todoListId","currentTask","console","log","t","removeTodolist","currentTodolist","f","addTask","task","changeStatus","taskId","currentStatus","find","changeFilter","value","currentTodoList","addNewTodolist","newTodolistID","newTodolist","changeTaskTitle","map","tasksForTodolist"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {TaskType, ToDolist} from './ToDolist';\r\nimport {v1} from 'uuid';\r\nimport {AddNewTodolist} from \"./components/AddNewTodolist\";\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\ntype todolistsType = { id: string, title: string, filter: FilterValuesType };\r\ntype taskGeneralType = { [key: string]: Array<TaskType> }\r\n\r\n\r\nfunction App() {\r\n\r\n    let todolistID1 = v1();\r\n    let todolistID2 = v1();\r\n\r\n    let [todolists, setTodolists] = useState<Array<todolistsType>>([\r\n        {id: todolistID1, title: 'What to learn', filter: 'all'},\r\n        {id: todolistID2, title: 'What to buy', filter: 'all'},\r\n    ])\r\n\r\n    let [tasks, setTasks] = useState({\r\n        [todolistID1]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todolistID2]: [\r\n            {id: v1(), title: \"Milk\", isDone: true},\r\n            {id: v1(), title: \"Apple\", isDone: true},\r\n            {id: v1(), title: \"Beer\", isDone: false},\r\n            {id: v1(), title: \"Hleb\", isDone: false},\r\n            {id: v1(), title: \"Water\", isDone: false},\r\n        ]\r\n    });\r\n\r\n    function removeTask(todoListId: string, id: string) {\r\n        let currentTask = tasks[todoListId];\r\n        console.log(currentTask)\r\n        if (currentTask) {\r\n            tasks[todoListId] = currentTask.filter(t => t.id != id)\r\n        }\r\n        setTasks({...tasks})\r\n    }\r\n    function removeTodolist(todoListId: string) {\r\n        let currentTodolist = todolists.filter( f => f.id !== todoListId)\r\n        setTodolists(currentTodolist)\r\n    }\r\n    function addTask(todoListId: string, title: string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        tasks[todoListId] = [task, ...tasks[todoListId]]\r\n        setTasks({...tasks})\r\n    }\r\n    function changeStatus(todoListId: string, taskId: string, isDone: boolean) {\r\n        let currentStatus = tasks[todoListId];\r\n        let task = currentStatus.find(t => t.id === taskId);\r\n        if (task) {\r\n            task.isDone = isDone;\r\n        }\r\n        setTasks({...tasks})\r\n    }\r\n    function changeFilter(todoListId: string, value: FilterValuesType) {\r\n        let currentTodoList = todolists.find(t => t.id === todoListId)\r\n        console.log(value)\r\n        if (currentTodoList) {\r\n            currentTodoList.filter = value\r\n        }\r\n        setTodolists([...todolists])\r\n    }\r\n    function addNewTodolist(title: string) {\r\n        let newTodolistID = v1()\r\n        let newTodolist: todolistsType = {id: newTodolistID, title: title, filter: 'all'}\r\n        setTodolists([newTodolist, ...todolists])\r\n        setTasks({...tasks, [newTodolistID]: []})\r\n    }\r\n    function changeTaskTitle(title: string) {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AddNewTodolist addNewTodolist={addNewTodolist} />\r\n\r\n            {todolists.map((t) => {\r\n                    let tasksForTodolist = tasks[t.id];\r\n                    if (t.filter === \"active\") {\r\n                        tasksForTodolist = tasks[t.id].filter(t => t.isDone === false);\r\n                    }\r\n                    if (t.filter === \"completed\") {\r\n                        tasksForTodolist = tasks[t.id].filter(t => t.isDone === true);\r\n                    }\r\n                    // debugger\r\n                    return (\r\n                        <ToDolist\r\n                            key={t.id}\r\n                            todoListId={t.id}\r\n                            title={t.title}\r\n                            tasks={tasksForTodolist}\r\n                            removeTask={removeTask}\r\n                            changeFilter={changeFilter}\r\n                            addTask={addTask}\r\n                            changeTaskStatus={changeStatus}\r\n                            filter={t.filter}\r\n                            removeTodolist={removeTodolist}\r\n                            addNewTodolist={addNewTodolist}\r\n\r\n                        />\r\n                    )\r\n                }\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}