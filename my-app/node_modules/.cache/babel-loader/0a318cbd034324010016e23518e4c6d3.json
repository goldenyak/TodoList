{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/new-todolist/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { ToDolist } from './ToDolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: \"Milk\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Apple\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Beer\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Hleb\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Water\",\n      isDone: false\n    }]\n  });\n\n  function removeTask(todoListId, id) {\n    let currentTask = tasks[todoListId];\n\n    if (currentTask) {\n      tasks[todoListId] = currentTask.filter(t => t.id != id);\n    }\n\n    setTasks({ ...tasks\n    }); // let filteredTasks = tasks.filter(t => t.id != id);\n    //     setTasks(filteredTasks);\n  }\n\n  function addTask(todoListId, title) {// let task = {id: v1(), title: title, isDone: false};\n    // let newTasks = [task, ...tasks];\n    // setTasks(newTasks);\n  }\n\n  function changeStatus(todoListId, taskId, isDone) {// let task = tasks.find(t => t.id === taskId);\n    // if (task) {\n    //     task.isDone = isDone;\n    // }\n    //\n    // setTasks([...tasks]);\n  }\n\n  function changeFilter(todoListId, value) {\n    let currentTodoList = todolists.find(t => t.id === todoListId);\n    console.log(value);\n\n    if (currentTodoList) {\n      currentTodoList.filter = value;\n    }\n\n    setTodolists([...todolists]); // setFilter(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(t => {\n      let tasksForTodolist = tasks[t.id];\n\n      if (t.filter === \"active\") {\n        tasksForTodolist = tasks[t.id].filter(t => t.isDone === false);\n      }\n\n      if (t.filter === \"completed\") {\n        tasksForTodolist = tasks[t.id].filter(t => t.isDone === true);\n      } // debugger\n\n\n      return /*#__PURE__*/_jsxDEV(ToDolist, {\n        todoListId: t.id,\n        title: t.title,\n        tasks: tasksForTodolist,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addTask: addTask,\n        changeTaskStatus: changeStatus,\n        filter: t.filter\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"+gAAElPWGgLXF4iBmm+AfjrzfXE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Downloads/new-todolist/my-app/src/App.tsx"],"names":["React","useState","ToDolist","v1","App","todolistID1","todolistID2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","todoListId","currentTask","t","addTask","changeStatus","taskId","changeFilter","value","currentTodoList","find","console","log","map","tasksForTodolist"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {ToDolist} from './ToDolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\ntype todolistsType = { id: string, title: string, filter: FilterValuesType };\r\n\r\nfunction App() {\r\n\r\n    let todolistID1=v1();\r\n    let todolistID2=v1();\r\n\r\n    let [todolists, setTodolists] = useState<Array<todolistsType>>([\r\n        {id: todolistID1, title: 'What to learn', filter: 'all'},\r\n        {id: todolistID2, title: 'What to buy', filter: 'all'},\r\n    ])\r\n\r\n    let [tasks, setTasks] = useState({\r\n        [todolistID1]:[\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todolistID2]:[\r\n            {id: v1(), title: \"Milk\", isDone: true},\r\n            {id: v1(), title: \"Apple\", isDone: true},\r\n            {id: v1(), title: \"Beer\", isDone: false},\r\n            {id: v1(), title: \"Hleb\", isDone: false},\r\n            {id: v1(), title: \"Water\", isDone: false},\r\n        ]\r\n    });\r\n\r\n\r\n\r\n    function removeTask(todoListId: string, id: string) {\r\n\r\n        let currentTask = tasks[todoListId];\r\n        if (currentTask) {\r\n            tasks[todoListId] = currentTask.filter( t => t.id !=id )\r\n        }\r\n        setTasks({...tasks})\r\n        // let filteredTasks = tasks.filter(t => t.id != id);\r\n        //     setTasks(filteredTasks);\r\n    }\r\n\r\n    function addTask(todoListId: string, title: string) {\r\n\r\n\r\n        // let task = {id: v1(), title: title, isDone: false};\r\n        // let newTasks = [task, ...tasks];\r\n        // setTasks(newTasks);\r\n    }\r\n\r\n    function changeStatus(todoListId: string, taskId: string, isDone: boolean) {\r\n        // let task = tasks.find(t => t.id === taskId);\r\n        // if (task) {\r\n        //     task.isDone = isDone;\r\n        // }\r\n        //\r\n        // setTasks([...tasks]);\r\n    }\r\n\r\n    function changeFilter( todoListId: string, value: FilterValuesType) {\r\n        let currentTodoList = todolists.find(t => t.id === todoListId)\r\n        console.log(value)\r\n\r\n        if (currentTodoList) {\r\n            currentTodoList.filter = value\r\n        }\r\n        setTodolists([...todolists])\r\n\r\n        // setFilter(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {todolists.map((t) => {\r\n                    let tasksForTodolist = tasks[t.id];\r\n                    if (t.filter === \"active\") {\r\n                        tasksForTodolist = tasks[t.id].filter(t => t.isDone === false);\r\n                    }\r\n                    if (t.filter === \"completed\") {\r\n                        tasksForTodolist = tasks[t.id].filter(t => t.isDone === true);\r\n                    }\r\n                    // debugger\r\n                    return (\r\n                        <ToDolist\r\n                            key={t.id}\r\n                            todoListId={t.id}\r\n                            title={t.title}\r\n                            tasks={tasksForTodolist}\r\n                            removeTask={removeTask}\r\n                            changeFilter={changeFilter}\r\n                            addTask={addTask}\r\n                            changeTaskStatus={changeStatus}\r\n                            filter={t.filter}\r\n                        />\r\n                    )\r\n                }\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}